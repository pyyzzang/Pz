"""
Django settings for HomePage project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import posixpath

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8e370c07-bd72-4708-b250-2317697b3be7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.219.102',
                 '127.0.0.1',
                 '192.168.219.101',
                 '192.168.0.5',
                 'localhost',
                 '192.168.219.100',
                 'pyyzzang.shop',
                 '182.231.34.148'
                 ]


# Application definition

INSTALLED_APPS = [
    'app',
    # Add your apps here to enable them
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'sslserver',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HomePage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HomePage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = posixpath.join(*(BASE_DIR.split(os.path.sep) + ['static']))

SILENCED_SYSTEM_CHECKS = [
    'admin.E408',
	'admin.E409',
	'admin.E410',
]



LOG_FILE = os.path.join(BASE_DIR,'log/django.log')
LOG_DJANGO_FILE = os.path.join(BASE_DIR,'log/django.log')
LOG_DJANGO_REQUEST_FILE = os.path.join(BASE_DIR,'log/django_request.log')
LOG_DJANGO_Home = os.path.join(BASE_DIR,'log/HomePage.log')
LOGGING = {
	'version': 1, 
	'disable_existing_loggers': False, 
	'formatters': {
		'verbose': {		
			'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
			'datefmt' : "%d/%b/%Y %H:%M:%S" 
		},
		'simple': {
			'format': '%(levelname)s %(message)s' 
		},
	},
	'handlers': {
		'file': {
			'level': 'INFO', 
			'class': 'logging.handlers.RotatingFileHandler', 
			'filename': LOG_FILE, 
			'formatter': 'verbose', 
			'maxBytes':1024*1024*10, 
			'backupCount':5, 
		},
        'django': {
			'level': 'INFO', 
			'class': 'logging.handlers.RotatingFileHandler', 
			'filename': LOG_DJANGO_FILE, 
			'formatter': 'verbose', 
			'maxBytes':1024*1024*10, 
			'backupCount':5, 
		},
        'django_request': {
			'level': 'INFO', 
			'class': 'logging.handlers.RotatingFileHandler', 
			'filename': LOG_DJANGO_REQUEST_FILE, 
			'formatter': 'verbose', 
			'maxBytes':1024*1024*10, 
			'backupCount':5, 
		},
        'homepage': {
			'level': 'INFO', 
			'class': 'logging.handlers.RotatingFileHandler', 
			'filename': LOG_DJANGO_Home, 
			'formatter': 'verbose', 
			'maxBytes':1024*1024*10, 
			'backupCount':5, 
		},
        'console': {
            'class': 'logging.StreamHandler',
        },
	}, 
	'loggers': {
		'django': {
			'handlers':['django'], 
			'propagate': True,
			'level':'INFO',
		},
		'django.request': {
			'handlers':['django_request'], 
			'propagate': False, 
			'level':'INFO',
		}, 
	    'HomePage': {
		    'handlers': ['homepage', 'console'], 'level': 'INFO', 
	    },
    }
}

#sudo python3 manage.py crontab add     --- Register crontab 
#sudo python3 manage.py crontab remove  --- UnRegister crontab 


#0 5 * * * : 매일 5시 0분에 실행.
#5 * * * * : 매시 5분이 될 때마다 실행. 즉, 한 시간 간격으로 실행.
#* * * * * : 1분에 한 번씩 실행.
#0 5 1 * * : 매달 1일 새벽 5시에 실행.
#그럼 5분에 한 번씩 혹은 5시간에 한 번씩 실행하고 싶으면 어떻게 적어야 하는가? 아래처럼 적는다.
#*/5 * * * * : 5분마다 한 번씩
#0 */5 * * * : 5시간마다 한 번씩

#0 5,11 * * * : 새벽 5시와 밤 11시.
#0 5,11 * * 0,3 : 매주 일요일과 수요일 새벽 5시와 밤 11시.

CRONJOBS = [
    ('* 0 * * *', 'app.cron.TorrentAllStart.TorrentAllStart'),
    ('* 18 * * *', 'app.cron.TorrentAllPause.TorrentAllPause'),
    ('* 0 * * 0,7', 'app.cron.TorrentAllPause.TorrentAllPause'),
    ('* 5 * * *', 'app.cron.CronTab.PcReboot'),    #reboot
    ('10 5 * * *', 'app.cron.CronTab.Delete_DotVsCode'),    #delete .vscode folder 
]
